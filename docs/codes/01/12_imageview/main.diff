diff --git a/src/main.cpp b/src/main.cpp
index 88b5efb..9ec5002 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -56,6 +56,7 @@ private:
     std::vector<vk::Image> m_swapChainImages;
     vk::Format m_swapChainImageFormat;
     vk::Extent2D m_swapChainExtent;
+    std::vector<vk::raii::ImageView> m_swapChainImageViews;
     /////////////////////////////////////////////////////////////////
 
     /////////////////////////////////////////////////////////////////
@@ -76,6 +77,7 @@ private:
         pickPhysicalDevice();
         createLogicalDevice();
         createSwapChain();
+        createImageViews();
     }
 
     void mainLoop() {
@@ -403,6 +405,25 @@ private:
     }
     /////////////////////////////////////////////////////////////////
 
+    /////////////////////////////////////////////////////////////////
+    /// imageview
+    void createImageViews() {
+        m_swapChainImageViews.reserve( m_swapChainImages.size() );
+        for (size_t i = 0; i < m_swapChainImages.size(); i++) {
+            vk::ImageViewCreateInfo createInfo;
+            createInfo.image = m_swapChainImages[i];
+            createInfo.viewType = vk::ImageViewType::e2D;
+            createInfo.format = m_swapChainImageFormat;
+            createInfo.subresourceRange.aspectMask = vk::ImageAspectFlagBits::eColor;
+            createInfo.subresourceRange.baseMipLevel = 0;
+            createInfo.subresourceRange.levelCount = 1;
+            createInfo.subresourceRange.baseArrayLayer = 0;
+            createInfo.subresourceRange.layerCount = 1;
+
+            m_swapChainImageViews.emplace_back( m_device.createImageView(createInfo) );
+        }
+    }
+    /////////////////////////////////////////////////////////////////
 };
 
 int main() {
