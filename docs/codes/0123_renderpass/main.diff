diff --git a/src/main.cpp b/src/main.cpp
index 27b2215..f82410f 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -58,6 +58,7 @@ private:
     vk::Format m_swapChainImageFormat;
     vk::Extent2D m_swapChainExtent;
     std::vector<vk::raii::ImageView> m_swapChainImageViews;
+    vk::raii::RenderPass m_renderPass{ nullptr };
     vk::raii::PipelineLayout m_pipelineLayout{ nullptr };
     /////////////////////////////////////////////////////////////////
 
@@ -80,6 +81,7 @@ private:
         createLogicalDevice();
         createSwapChain();
         createImageViews();
+        createRenderPass();
         createGraphicsPipeline();
     }
 
@@ -428,6 +430,35 @@ private:
     }
     /////////////////////////////////////////////////////////////////
 
+    /////////////////////////////////////////////////////////////////
+    /// render pass
+    void createRenderPass() {
+        vk::AttachmentDescription colorAttachment;
+        colorAttachment.format = m_swapChainImageFormat;
+        colorAttachment.samples = vk::SampleCountFlagBits::e1;
+        colorAttachment.loadOp = vk::AttachmentLoadOp::eClear;
+        colorAttachment.storeOp = vk::AttachmentStoreOp::eStore;
+        colorAttachment.stencilLoadOp = vk::AttachmentLoadOp::eDontCare;
+        colorAttachment.stencilStoreOp = vk::AttachmentStoreOp::eDontCare;
+        colorAttachment.initialLayout = vk::ImageLayout::eUndefined;
+        colorAttachment.finalLayout = vk::ImageLayout::ePresentSrcKHR;
+
+        vk::AttachmentReference colorAttachmentRef;
+        colorAttachmentRef.attachment = 0;
+        colorAttachmentRef.layout = vk::ImageLayout::eColorAttachmentOptimal;
+
+        vk::SubpassDescription subpass;
+        subpass.pipelineBindPoint = vk::PipelineBindPoint::eGraphics;
+        subpass.setColorAttachments( colorAttachmentRef );
+
+        vk::RenderPassCreateInfo renderPassInfo;
+        renderPassInfo.setAttachments( colorAttachment );
+        renderPassInfo.setSubpasses( subpass );
+
+        m_renderPass = m_device.createRenderPass(renderPassInfo);
+    }
+    /////////////////////////////////////////////////////////////////
+
     /////////////////////////////////////////////////////////////////
     /// pipeline
     static std::vector<char> readFile(const std::string& filename) {
